% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_gridmet.R
\name{get_gridmet}
\alias{get_gridmet}
\title{Climate Futures Toolbox gridMET Data}
\usage{
get_gridmet(
  shp_path,
  area_name,
  park,
  parameters = gridmet_reference$parameters,
  years = c(1979, 2020),
  local_dir = tempdir(),
  verbose = TRUE,
  ncores = 1
)
}
\arguments{
\item{shp_path}{A path to a shapefile with which to clip the resulting data
sets. This path may be to a local .shp file or a url to a zipped remote
file. If this option is used, leave the `park` argument empty or set
to NA. (character)}

\item{area_name}{If a shapefile path is used, provide a name to use as a
reference to the location. This will be used in file names, attributes, and
directories. (character)'}

\item{park}{The name of a national park (e.g., "Yellowstone National
Park", "Yellowstone Park", "Yellowstone", "yellowstone", etc.). The user may
use this option in place of a shapefile path. In this case, leave the
shp_path argument empty or set to NA. (character)}

\item{parameters}{A list of climate parameters to download. If left empty
all available parameters will be downloaded. A list of available of models is
available under cft::maca_reference$parameters. (vector)}

\item{years}{The first and last years of the desired period. (vector)}

\item{local_dir}{The local directory in which to save files. By default, 
files are saved in a temporary directory (as per CRAN guidelines), and are
lost after your R session ends. Specify a path to a local directory with 
this argument to retain files and avoid duplicate downloads
in subsequent R sessions.  (character)}

\item{verbose}{Print verbose output. (logical)}

\item{ncores}{The number of cpus to use, which defaults to 1. (numeric)}
}
\value{
A tibble containing information about climate data files.
}
\description{
Retrieves subsetted data of historical climate variables within National
Parks or shapefiles in the Contiguous United States from the gridMET
dataset.
}
\examples{
\dontrun{
d <- get_gridmet(park = "Acadia National Park",
                 parameters = "pr", 
                 years = c(1979, 2020),
                 ncores = parallel::detectCores())
}

}
